/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.mtahq.gtfsmonitor.gui;

import java.awt.Color;
import java.awt.Component;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.border.Border;

/**
 *
 * @author michaeln
 */
public class FeedPanel extends javax.swing.JPanel implements ListCellRenderer<FeedStatus> {

    private static final ImageIcon OK_ICON = new ImageIcon("/green_ball.png");
    private static final ImageIcon LATE_ICON = new ImageIcon("/yellow_ball.png");
    private static final ImageIcon ERROR_ICON = new ImageIcon("/red_ball.png");

    private FeedStatus feed = null;
    private Border border = BorderFactory.createLineBorder(Color.RED, 1);

    public FeedStatus getFeed() {
        return feed;
    }

    public void setFeed(FeedStatus feed) {
        this.feed = feed;
        this.showFeed();
    }

    private void showFeed() {
        this.jtfFeedName.setText(this.feed.getFeed().name());
        this.jtfId.setText(this.feed.getFeed().getFeedId());

        switch (this.feed.getFeedState()) {
            case OK:
                this.jlblIcon.setIcon(OK_ICON);
                break;
            case LATE:
                this.jlblIcon.setIcon(LATE_ICON);
                break;
            case ERROR:
                this.jlblIcon.setIcon(ERROR_ICON);
                break;
        }

        if (this.feed.getFeedState() == FeedState.ERROR) {
            this.jtfAge.setText(String.format("%.1f seconds", 0.0f));
            this.jtfCount.setText(String.format("%s updates", -1));
            this.jtfCount.setText(String.format("%s bytes", 0));
            this.jtfError.setText(this.feed.getErrorText());
        } else {
            this.jtfAge.setText(String.format("%.1f seconds", this.feed.getAge()));
            this.jtfCount.setText(String.format("%s updates", this.feed.getUpdateCount()));
            this.jtfCount.setText(String.format("%s bytes", this.feed.getSize()));
        }
    }

    /**
     * Creates new form FeedPanel
     */
    public FeedPanel() {
        initComponents();
    }

    public FeedPanel(FeedStatus feed) {
        initComponents();
        this.feed = feed;
        this.showFeed();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jtfFeedName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jtfId = new javax.swing.JTextField();
        jlblIcon = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtfAge = new javax.swing.JTextField();
        jtfCount = new javax.swing.JTextField();
        jtfSize = new javax.swing.JTextField();
        jtfError = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        jtfFeedName.setEditable(false);
        jtfFeedName.setPreferredSize(new java.awt.Dimension(150, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(jtfFeedName, gridBagConstraints);

        jLabel1.setLabelFor(jtfId);
        jLabel1.setText("ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(jLabel1, gridBagConstraints);

        jtfId.setEditable(false);
        jtfId.setPreferredSize(new java.awt.Dimension(40, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(jtfId, gridBagConstraints);

        jlblIcon.setLabelFor(jtfFeedName);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(jlblIcon, gridBagConstraints);

        jLabel3.setLabelFor(jtfAge);
        jLabel3.setText("Age");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(jLabel3, gridBagConstraints);

        jLabel4.setLabelFor(jtfCount);
        jLabel4.setText("Count");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(jLabel4, gridBagConstraints);

        jLabel5.setLabelFor(jtfSize);
        jLabel5.setText("Size");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(jLabel5, gridBagConstraints);

        jtfAge.setEditable(false);
        jtfAge.setPreferredSize(new java.awt.Dimension(150, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(jtfAge, gridBagConstraints);

        jtfCount.setEditable(false);
        jtfCount.setPreferredSize(new java.awt.Dimension(150, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(jtfCount, gridBagConstraints);

        jtfSize.setEditable(false);
        jtfSize.setPreferredSize(new java.awt.Dimension(150, 26));
        jtfSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfSizeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(jtfSize, gridBagConstraints);

        jtfError.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        add(jtfError, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jtfSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfSizeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jlblIcon;
    private javax.swing.JTextField jtfAge;
    private javax.swing.JTextField jtfCount;
    private javax.swing.JTextField jtfError;
    private javax.swing.JTextField jtfFeedName;
    private javax.swing.JTextField jtfId;
    private javax.swing.JTextField jtfSize;
    // End of variables declaration//GEN-END:variables

    @Override
    public Component getListCellRendererComponent(JList<? extends FeedStatus> list, FeedStatus value, int index, boolean isSelected, boolean cellHasFocus) {
        this.setFeed(feed);
        if (isSelected) {
            setBackground(list.getSelectionBackground());
            setForeground(list.getSelectionForeground());
        } else {
            setBackground(list.getBackground());
            setForeground(list.getForeground());
        }
        if (isSelected && cellHasFocus) {
            setBorder(border);
        } else {
            setBorder(null);
        }
        return this;
    }
}
